# General
set -qg terminal-overrides 'xterm*:XT:smcup@:rmcup@,*:Ss=\E[%p1%d q:Se=\E[2 q'
set -qg default-terminal 'screen-256color'
set -qg xterm-keys on
set -qg escape-time 0
set -qg display-time 5000
set -qg display-panes-time 5000
set -qg history-limit 100000
set -qg base-index 1
set -qg pane-base-index 1
set -qg allow-rename off
set -qg renumber-windows on
set -qg status-keys vi
set -qg mode-keys vi

# M-\ = prefix
unbind C-b
set -qg prefix 'M-\'
bind-key 'M-\' send-prefix

# Colors
set -qg pane-border-style                fg=brightblack
set -qg pane-active-border-style         fg=brightwhite
set -qg display-panes-colour             white
set -qg display-panes-active-colour      brightwhite

set -qg status-left-style                fg=black,bg=white
set -qg status-right-style               fg=black

set -qg status-style                     fg=white
set -qg window-status-last-style         fg=white,bg=brightblack
set -qg window-status-current-style      fg=black,bg=white

set -qg window-status-content-style      fg=black,bg=brightgreen
set -qg window-status-activity-style     fg=black,bg=brightyellow
set -qg window-status-bell-style         fg=black,bg=brightred

set -qg mode-style                       fg=black,bg=brightwhite
set -qg message-style                    fg=black,bg=brightwhite
set -qg message-command-style            fg=brightwhite,bg=black

# Status
set -qg status-interval 1
set -qg status-justify left
set -qg status-left-length 25
set -qg status-right-length 100
set -qg window-status-separator ''
set -qg status-left ''
set -qg status-right '' # '#[bg={{ text_secondary }}] #S '
set -qg window-status-format ' #W '
set -qg window-status-current-format ' #W '

# Title
set -qg set-titles on
set -qg set-titles-string "#W"

# Mouse
set -qg mouse on
set -qg mode-mouse on
set -qg mouse-resize-pane on
set -qg mouse-select-pane on
set -qg mouse-select-window on

# Motion
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Resize
bind -n M-C-h resize-pane -L 5
bind -n M-C-j resize-pane -D 5
bind -n M-C-k resize-pane -U 5
bind -n M-C-l resize-pane -R 5

# Swaps
bind -n M-. swap-pane -D
bind -n M-, swap-pane -U
bind -n M-> rotate-window -D
bind -n M-< rotate-window -U

# Flip orientation with previous
bind -n M-_ move-pane -t '.-'
bind -n M-| move-pane -h -t '.-'

# Splits
bind v split-window -h -c '#{pane_current_path}'
bind s split-window -v -c '#{pane_current_path}'

# Windows
bind -n M-1 select-window -t :1
bind -n M-2 select-window -t :2
bind -n M-3 select-window -t :3
bind -n M-4 select-window -t :4
bind -n M-5 select-window -t :5
bind -n M-6 select-window -t :6
bind -n M-7 select-window -t :7
bind -n M-8 select-window -t :8
bind -n M-9 select-window -t :9
bind -n M-0 select-window -t :10

bind 1 join-pane -s :. -t :1
bind 2 join-pane -s :. -t :2
bind 3 join-pane -s :. -t :3
bind 4 join-pane -s :. -t :4
bind 5 join-pane -s :. -t :5
bind 6 join-pane -s :. -t :6
bind 7 join-pane -s :. -t :7
bind 8 join-pane -s :. -t :8
bind 9 join-pane -s :. -t :9
bind 0 join-pane -s :. -t :10

bind -n M-t new-window -c '#{pane_current_path}'
bind -n M-w last-window
bind -n M-n next-window
bind -n M-p previous-window
bind -n M-N swap-window -t:+1
bind -n M-P swap-window -t:-1

# Select
bind -n M-e copy-mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-selection

# Clipboard
bind -n M-y run -b 'tmux show-buffer | xclip -sel c'
bind -n M-u run -b 'tmux set-buffer -- "$(xclip -sel c -o)"; tmux paste-buffer'
bind -n M-v paste-buffer

# Prefix-less shortcuts
bind -n M-\;    command-prompt
bind -n M-r     source-file ~/.tmux.conf
bind -n M-"'"   display-panes
bind -n M-i     display-message ' %m/%d (%a) %H:%M Â» #{pane_current_command} '

# Other shortcuts
bind \;   command-prompt
# bind '"'  choose-tree -u
bind k    confirm-before -p 'kill-window #W? (y/n)' kill-window
bind q    confirm-before -p 'kill-session #S? (y/n)' kill-session

# Capture pane and open in Vim
bind-key e capture-pane -S -100000\;\
           save-buffer /tmp/tmux-capture.log\;\
           new-window "vim + /tmp/tmux-capture.log"\;\
           delete-buffer

# OSX override
if '[ -f ~/.tmux-osx.conf ]' 'source ~/.tmux-osx.conf'

# link this file in ~
# purag/.files!link
