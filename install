#!/bin/bash

__green="\033[32m"
__red="\033[31m"
__gray="\033[1;30m"
__blue="\033[34m"
__magenta="\033[35m"
__reset="\033[0m"

cd ~/.files

function trace_exec () {
  silent=0
  if [ "$1" = "-s" ]; then
    silent=1
    shift
  fi

  echo -e "  $__green$1$__reset"
  shift
  (( ! $silent )) && echo -e "    $__gray$@$__reset" | tee log/install
  "$@" 2>&1 | sed "s/^/    /" | tee log/install
  echo
}

mkdir -p log

case "$(uname)" in
Linux)
    # https://github.com/dylanaraps/neofetch/blob/master/neofetch
    distro="$(awk -F 'NAME=' '/^NAME=/ {printf $2}' /etc/*ease)"
    distro="${distro//\"}"

    echo -e "${__blue}Installing $distro config...$__reset"

    case "$distro" in
    Ubuntu)
      if ! which ctags &> /dev/null; then
        trace_exec "Installing ctags..." \
          sudo apt-get install exuberant-ctags
      fi
    ;;& # fall-through to Debian case
    *Debian*)
      maybe_curl=""
      maybe_git=""
      maybe_procps=""
      maybe_buildessential=""
      ! which curl &> /dev/null && maybe_curl="curl"
      ! which git &> /dev/null && maybe_git="git"
      ! which ps &> /dev/null && maybe_procps="procps"
      ! which gcc &> /dev/null && ! which make && maybe_buildessential="build-essential"
      if [[ ! -z "$maybe_curl$maybe_git$maybe_procps$maybe_buildessential" ]]; then
        trace_exec "Installing brew deps for Ubuntu/Debian..." \
          sudo apt-get install "$maybe_curl $maybe_git $maybe_procps $maybe_buildessential"
      fi
    ;;

    *)
      echo -e "${__red}No config installation provided for [$distro].$__reset"
      #exit 1
    esac

    echo -e "${__blue}Done.$__reset"
esac

if ! which brew &> /dev/null; then
  echo -e "  ${__green}Installing homebrew...$__reset"
  echo -e "    $__gray"'bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"'"$__reset"
  bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

echo -e "${__blue}Setting up brew shellenv/paths...$__reset"
test -d ~/.linuxbrew && eval "$(~/.linuxbrew/bin/brew shellenv)"
test -d /home/linuxbrew/.linuxbrew && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
test -r ~/.bash_profile && echo "eval \"\$($(brew --prefix)/bin/brew shellenv)\"" >> ~/.bash_profile
echo "eval \"\$($(brew --prefix)/bin/brew shellenv)\"" >> ~/.profile
echo

trace_exec "Saving old dotfiles in *_old..." \
  bash -c 'basename -a $(grep -rl "purag/.files\!link" ~/.files) | xargs -I {} mv ~/{} ~/{}_old'

if [[ $(grep -rl "purag/.files\!link" ~/.files) = *.files* ]]; then
  trace_exec "Linking dotfiles to home directory..." \
    bash -c 'grep -rl "purag/.files\!link" ~/.files | xargs -I {} ln -s {} ~'
else
  trace_exec "Linking dotfiles to home directory..." \
    bash -c 'grep -rl "purag/.files\!link" ~/.files | xargs -I {} ln -s ~/.files/{} ~'
fi

if [ "$(uname)" = "Darwin" ]; then
  trace_exec "Linking MacOS dotfiles to home directory..." \
    bash -c 'grep -rl "purag/.files\!darwin-link" ~/.files | xargs -I {} ln -s ~/.files/{} ~'
fi

trace_exec "Cloning purag/scripts to ~/scripts..." \
  git clone https://github.com/purag/scripts.git ~/scripts

if [ ! -f "~/.vim/autoload/plug.vim" ]; then
  trace_exec "Downloading vim-plug..." \
    curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
      https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
fi

trace_exec "Installing vim plugins..." \
  vim +PlugInstall +qall

echo -e "${__blue}Done."
echo -e "View logs in $(pwd)/log/install.$__reset"
